from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import json

from config import ADMIN_ID
from database import create_order, update_order_photo
from keyboards import get_admin_decision

router = Router()

class PaymentStates(StatesGroup):
    waiting_for_photo = State()

@router.message(F.web_app_data)
async def handle_webapp_data(message: Message, state: FSMContext, bot: Bot):
    try:
        data = json.loads(message.web_app_data.data)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        await state.update_data(
            product_id=data.get('product_id'),
            product_name=data.get('product_name'),
            base_price=data.get('original_price', data.get('price')),
            final_price=data.get('price'),
            promo_code=data.get('promo_code'),
            payment_method=data.get('payment_method', 'unknown')
        )
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∂–∏–¥–∞–Ω–∏—é —Ñ–æ—Ç–æ
        await state.set_state(PaymentStates.waiting_for_photo)
        
        text = "‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n\n"
        text += f"üì¶ –¢–æ–≤–∞—Ä: {data.get('product_name')}\n"
        text += f"üí∞ –¶–µ–Ω–∞: {data.get('price')}‚ÇΩ\n"
        
        if data.get('promo_code'):
            text += f"üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {data.get('promo_code')}\n"
        
        text += f"\n‚úàÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã\n\n"
        text += f"üì∏ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n"
        text += f"‚Ä¢ –ß–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–µ—Ç–∫–∏–º\n"
        text += f"‚Ä¢ –í–∏–¥–Ω–∞ —Å—É–º–º–∞ –∏ –¥–∞—Ç–∞\n\n"
        text += f"‚ö°Ô∏è –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (5-15 –º–∏–Ω) –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–≤–∞—Ä!"
        
        await message.answer(text)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Mini App: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω'")

@router.message(PaymentStates.waiting_for_photo, F.photo)
async def process_payment_photo(message: Message, state: FSMContext, bot: Bot):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    
    print(f"DEBUG: –î–∞–Ω–Ω—ã–µ –∏–∑ state: {data}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    
    product_name = data.get('product_name')
    final_price = data.get('final_price')
    base_price = data.get('base_price', final_price)
    promo_code = data.get('promo_code')
    payment_method = data.get('payment_method', 'unknown')
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
    if not product_name or not final_price:
        await message.answer(
            "‚ùå –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –ø–æ—Ç–µ—Ä—è–Ω—ã.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ:\n"
            "1. –ù–∞–∂–º–∏—Ç–µ '–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω'\n"
            "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä\n"
            "3. –ù–∞–∂–º–∏—Ç–µ '–û–ø–ª–∞—Ç–∏–ª'\n"
            "4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫"
        )
        await state.clear()
        return
    
    # –°–æ–∑–¥–∞—ë–º –∑–∞–∫–∞–∑
    order_id = await create_order(
        message.from_user.id, 
        product_name, 
        final_price, 
        payment_method,
        base_price, 
        promo_code
    )
    
    photo_file_id = message.photo[-1].file_id
    await update_order_photo(order_id, photo_file_id)
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    admin_text = f"‚ö†Ô∏è –ù–û–í–´–ô –ó–ê–ö–ê–ó #{order_id}\n\n"
    admin_text += f"üì¶ –¢–æ–≤–∞—Ä: {product_name}\n"
    admin_text += f"üí∞ –¶–µ–Ω–∞: {final_price}‚ÇΩ\n"
    
    if promo_code:
        discount = base_price - final_price
        admin_text += f"üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {promo_code}\n"
        admin_text += f"üíµ –ë–µ–∑ —Å–∫–∏–¥–∫–∏: {base_price}‚ÇΩ\n"
        admin_text += f"üíö –°–∫–∏–¥–∫–∞: {discount}‚ÇΩ\n"
    
    admin_text += f"üí≥ –ú–µ—Ç–æ–¥: {payment_method}\n\n"
    admin_text += f"üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å:\n"
    
    if message.from_user.username:
        admin_text += f"Username: @{message.from_user.username}\n"
    
    admin_text += f"–ò–º—è: {message.from_user.first_name}\n"
    admin_text += f"ID: {message.from_user.id}"
    
    await bot.send_photo(
        ADMIN_ID, 
        photo=photo_file_id, 
        caption=admin_text, 
        reply_markup=get_admin_decision(order_id)
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    user_text = "‚úÖ –ß–ï–ö –ü–û–õ–£–ß–ï–ù!\n\n"
    user_text += f"‚úì –ó–∞–∫–∞–∑ ‚Ññ{order_id} –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ\n"
    user_text += f"‚è± –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: 5-15 –º–∏–Ω—É—Ç\n"
    user_text += f"üì¨ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\n\n"
    user_text += f"üñ§ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–∂–∏–¥–∞–Ω–∏–µ!"
    
    await message.answer(user_text)
    await state.clear()

@router.message(PaymentStates.waiting_for_photo)
async def wrong_content(message: Message):
    await message.answer(
        "‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–û–¢–û —á–µ–∫–∞\n\n"
        "üì∏ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è:\n"
        "‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç –∏–∑ –±–∞–Ω–∫–∞\n"
        "‚Ä¢ –§–æ—Ç–æ —á–µ–∫–∞\n"
        "‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞"
    )
